{"version":3,"file":"static/js/690.8c3ddade.chunk.js","mappings":"kYAgHA,EA7FkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAWXC,GAAOC,EAAAA,EAAAA,GAAQ,CACnBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAGZC,SAAU,CACRF,OAAOG,EAAAA,EAAAA,GAAQ,oBAInB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,OAAO,KAAKC,EAAE,KAAKC,EAAG,IAAKC,GAAG,OAAMC,SAAA,EACzCC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,KAAK,KAAKC,OAAQ,IAAKC,GAAG,SAAQL,SAAC,yBAIzCN,EAAAA,EAAAA,MAACY,EAAAA,EAAK,CAACC,MAAI,EAACC,GAAG,KAAKC,GAAG,KAAIT,SAAA,EACzBC,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CACLC,QAAQ,UACRR,KAAK,KACLS,UAAUX,EAAAA,EAAAA,KAACY,EAAAA,IAAQ,CAACV,MAAMW,EAAAA,EAAAA,GAAI,MAC9BC,GAAG,KAAIf,SACR,YAGDC,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CACLC,QAAQ,UACRR,KAAK,KACLS,UAAUX,EAAAA,EAAAA,KAACe,EAAAA,IAAQ,CAACb,MAAMW,EAAAA,EAAAA,GAAI,MAC9BC,GAAG,KAAIf,SACR,eAKHC,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,CAACC,MAAM,yBAAyBC,cAAc,SAASC,GAAG,QAElE1B,EAAAA,EAAAA,MAAA,QAAM2B,SAAUlC,EAAKkC,UA/CJ,SAAHC,GAA6B,IAAvBhC,EAAKgC,EAALhC,MAAOC,EAAQ+B,EAAR/B,SAC7BN,GACEsC,EAAAA,EAAAA,IAAM,CACJjC,MAAAA,EACAC,SAAAA,IAGN,IAwCgDS,SAAA,EAC1CN,EAAAA,EAAAA,MAAC8B,EAAAA,EAAK,CAAAxB,SAAA,EACJC,EAAAA,EAAAA,KAACwB,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRC,cAAY,EACZC,UAAQ,EACRV,MAAM,QACNW,YAAY,kBACZC,MAAO3C,EAAK4C,OAAOzC,MACnB0C,SAAU,SAAAC,GAAK,OACb9C,EAAK+C,cAAc,QAASD,EAAME,cAAcL,MAAM,EAExDM,MAAOjD,EAAKkD,OAAO/C,OAAS,gBAC5BgD,OAAO,MACHnD,EAAKoD,cAAc,YAEzBtC,EAAAA,EAAAA,KAACuC,EAAAA,GAAad,EAAAA,EAAAA,GAAA,CACZC,cAAY,EACZC,UAAQ,EACRV,MAAM,WACNW,YAAY,gBACZC,MAAO3C,EAAK4C,OAAOxC,SACnByC,SAAU,SAAAC,GAAK,OACb9C,EAAK+C,cAAc,WAAYD,EAAME,cAAcL,MAAM,EAE3DQ,OAAO,MACHnD,EAAKoD,cAAc,kBAI3B7C,EAAAA,EAAAA,MAACY,EAAAA,EAAK,CAACmC,SAAS,QAAQhC,GAAG,KAAIT,SAAA,EAC7BN,EAAAA,EAAAA,MAACQ,EAAAA,EAAI,CAACwC,MAAM,SAASvC,KAAK,KAAIH,SAAA,CAAC,yBACN,KACvBC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,CAACC,UAAWC,EAAAA,GAAMC,GAAG,YAAW9C,SAAC,iBAI1CC,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACqC,KAAK,SAAQ/C,SAAC,kBAKhC,EC/FA,EAXc,WACZ,OACEN,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhD,SAAA,EACEC,EAAAA,EAAAA,KAACgD,EAAAA,EAAM,CAAAjD,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aAETC,EAAAA,EAAAA,KAACiD,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { useForm, isEmail } from '@mantine/form';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaGithub } from 'react-icons/fa';\nimport {\n  TextInput,\n  PasswordInput,\n  Text,\n  Paper,\n  Group,\n  Button,\n  Divider,\n  Anchor,\n  Stack,\n  rem,\n} from '@mantine/core';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }) => {\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n  };\n\n  const form = useForm({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n\n    validate: {\n      email: isEmail('Invalid email'),\n    },\n  });\n\n  return (\n    <Paper shadow=\"sm\" p=\"xl\" w={350} mx=\"auto\">\n      <Text size=\"lg\" weight={500} ta=\"center\">\n        Welcome, login with\n      </Text>\n\n      <Group grow mb=\"md\" mt=\"md\">\n        <Button\n          variant=\"outline\"\n          size=\"md\"\n          leftIcon={<FcGoogle size={rem(22)} />}\n          fz=\"sm\"\n        >\n          Google\n        </Button>\n        <Button\n          variant=\"outline\"\n          size=\"md\"\n          leftIcon={<FaGithub size={rem(22)} />}\n          fz=\"sm\"\n        >\n          GitHub\n        </Button>\n      </Group>\n\n      <Divider label=\"Or continue with email\" labelPosition=\"center\" my=\"lg\" />\n\n      <form onSubmit={form.onSubmit(handleSubmit)}>\n        <Stack>\n          <TextInput\n            withAsterisk\n            required\n            label=\"Email\"\n            placeholder=\"hello@gmail.com\"\n            value={form.values.email}\n            onChange={event =>\n              form.setFieldValue('email', event.currentTarget.value)\n            }\n            error={form.errors.email && 'Invalid email'}\n            radius=\"md\"\n            {...form.getInputProps('email')}\n          />\n          <PasswordInput\n            withAsterisk\n            required\n            label=\"Password\"\n            placeholder=\"Your password\"\n            value={form.values.password}\n            onChange={event =>\n              form.setFieldValue('password', event.currentTarget.value)\n            }\n            radius=\"md\"\n            {...form.getInputProps('password')}\n          />\n        </Stack>\n\n        <Group position=\"apart\" mt=\"xl\">\n          <Text color=\"dimmed\" size=\"xs\">\n            Don't have an account?{' '}\n            <Anchor component={Link} to=\"/register\">\n              Register\n            </Anchor>\n          </Text>\n          <Button type=\"submit\">Login</Button>\n        </Group>\n      </form>\n    </Paper>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["dispatch","useDispatch","form","useForm","initialValues","email","password","validate","isEmail","_jsxs","Paper","shadow","p","w","mx","children","_jsx","Text","size","weight","ta","Group","grow","mb","mt","Button","variant","leftIcon","FcGoogle","rem","fz","FaGithub","Divider","label","labelPosition","my","onSubmit","_ref","logIn","Stack","TextInput","_objectSpread","withAsterisk","required","placeholder","value","values","onChange","event","setFieldValue","currentTarget","error","errors","radius","getInputProps","PasswordInput","position","color","Anchor","component","Link","to","type","_Fragment","Helmet","LoginForm"],"sourceRoot":""}